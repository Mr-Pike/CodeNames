@model Words
@{
    List<SelectListItem> themesSelect = (List<SelectListItem>)ViewData["ThemesSelect"];
    ViewData["Title"] = "Edit";
}

@section Styles {
    <link rel="stylesheet" href="~/css/chosen.min.css" />
}

<h2>Create Word</h2>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Themes</label>
                <select name="Themes" multiple class="form-control chosen-select" asp-items="@themesSelect"></select>
            </div>
            <div class="form-group">
                <a asp-action="Index" class="btn btn-outline-primary">Back to List</a>
                <input type="submit" value="Save" class="btn btn-outline-success" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/chosen.jquery.min.js"></script>
    <script>
        $(function () {
            $(".chosen-select").chosen({
                rtl: false,
                width: '100%'
            });
        });
    </script>
}