@model CodeNames.Services.PaginatedListService<Words>
@{
    ViewData["Title"] = "Words";
}

<h2>Words</h2>

<div class="row">
    <div class="col-6">
        <form asp-action="Index" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-outline-primary" /> |
                    <a asp-action="Index">Back to Full List</a>
                </p>
            </div>
        </form>
    </div>
    <div class="col-6 text-right">
        <a id="create-model" class="btn btn-outline-success" role="button" href="#" data-toggle="modal" data-target="#formModal">Create New</a>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]">Id</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Name</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a href="#" data-id="@Html.DisplayFor(modelItem => item.Id)" data-word="@Html.DisplayFor(modelItem => item.Name)" data-toggle="modal" data-target="#confirm-delete">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Create modal -->
<div class="modal fade" id="formModal" tabindex="-1" role="dialog" aria-labelledby="formModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Word</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="Create">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div class="form-group">
                                <label for="Name" class="control-label">Word</label>
                                <input name="Name" type="text" class="form-control" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-success" value="Save">
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete modal -->
<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                Remove word
            </div>
            <form id="form-delete" action="" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" id="word-id" value="" />
                <div class="modal-body">
                    Do you really want to remove '<span id="word-name"></span>' word?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                    <input type="submit" class="btn btn-danger btn-ok" value="Remove">
                </div>
            </form>
        </div>
    </div>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-outline-primary @nextDisabled">
    Next
</a>

@section Scripts {
    <script>
        $(document).ready(function () {
            var urlDelete = '@Url.Action("Delete", "Words")/0';
            $('#confirm-delete').on('show.bs.modal', function (e) {
                $('#form-delete').attr('action', urlDelete.replace('/0', '/' + $(e.relatedTarget).data('id')));
                $(this).find('#word-id').val($(e.relatedTarget).data('id'));
                $(this).find('#word-name').html($(e.relatedTarget).data('word'));
            });
        });
    </script>
}
